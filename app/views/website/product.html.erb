<!-- Content
================================================== -->
<div id="content" class="container">
<div class="hero-unit">
	<div class="ac">
		<h1>Explore features!</h1><br />
		<p>This is a template for a simple features page.</p>
	</div>
</div>

<div id="explore">
	<div class="row">
		<div class="span12">
			<ul class="the-icons">
				<li rel="tooltip" data-title="Some title"><i class="icon-search"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-envelope"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-heart"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-star"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-user"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-ok"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-remove"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-zoom-in"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-signal"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-cog"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-home"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-time"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-road"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-inbox"></i></li>
				<li rel="tooltip" data-title="Some title"><i class="icon-refresh"></i></li>
			</ul>
		</div>
	</div>

	<hr />

	<div class="row">
		<div class="span8">
			<h3>Feature Oriented Programming</h3>
			<p>
				FOSD arose out of layer-based designs and levels of abstraction in network protocols and extensible database systems in the late-1980s [1]. 
			</p>
			<p>
				A program was a stack of layers. Each layer added functionality to previously composed layers and different compositions of layers produced different programs. Not surprisingly, there was a need for a compact language to express such designs. Elementary algebra fit the bill: each layer was function (program transformation) that added new code to an existing program to produce a new program, and a program's design was modeled by an expression, i.e., a composition of transformations (layers). The figure below illustrates the stacking of layers h, j, and i (where h is on the bottom and i is on the top).
			</p>
		</div>
		<div class="span4">
			<p>
				<img rel="tooltip" title="Some title" alt="" class="thumbnail fr" src="http://image.shutterstock.com/display_pic_with_logo/562921/99568811/stock-photo-mouse-connections-99568811.jpg" width="240" />
			</p>
		</div>
	</div>

	<hr />

	<div class="row">

		<div class="span3">
			<p>
				<img rel="tooltip" title="Some title" alt="" class="thumbnail" src="http://image.shutterstock.com/display_pic_with_logo/183487/183487,1306438770,2/stock-vector-social-network-background-with-media-icons-78037456.jpg" width="200" />
			</p>
		</div>      	
		<div class="span9">
			<h3>Feature Oriented Programming</h3>
			<p>
				FOSD arose out of layer-based designs and levels of abstraction in network protocols and extensible database systems in the late-1980s [1]. 
			</p>
			<p>
				A program was a stack of layers. Each layer added functionality to previously composed layers and different compositions of layers produced different programs. Not surprisingly, there was a need for a compact language to express such designs. Elementary algebra fit the bill: each layer was function (program transformation) that added new code to an existing program to produce a new program, and a program's design was modeled by an expression, i.e., a composition of transformations (layers). The figure below illustrates the stacking of layers h, j, and i (where h is on the bottom and i is on the top).
			</p>
		</div>

	</div>

	<hr />

	<div class="row">
		<div class="span8">
			<h3>Feature Oriented Programming</h3>
			<p>
				FOSD arose out of layer-based designs and levels of abstraction in network protocols and extensible database systems in the late-1980s [1]. 
			</p>
			<p>
				A program was a stack of layers. Each layer added functionality to previously composed layers and different compositions of layers produced different programs. Not surprisingly, there was a need for a compact language to express such designs. Elementary algebra fit the bill: each layer was function (program transformation) that added new code to an existing program to produce a new program, and a program's design was modeled by an expression, i.e., a composition of transformations (layers). The figure below illustrates the stacking of layers h, j, and i (where h is on the bottom and i is on the top).
			</p>
		</div>
		<div class="span4">
			<p>
				<img alt="" rel="tooltip" title="Some title" class="thumbnail fr" src="http://image.shutterstock.com/display_pic_with_logo/368671/368671,1296679547,7/stock-photo-background-image-of-d-70345660.jpg" width="240" />
			</p>
		</div>
	</div>

	<hr />

	<div class="well ac">
		<h3>
			Start right now!
			<a href="plans.html" title="Try it for yourself.">
				Sign up
			</a>&rarr;
		</h3>
	</div>
</div>

</div>

<footer class="row">
	<div class="container">
		<div class="row">
			<div class="span2">
				<h3>Quick links</h3>
				<ul>
					<li><a href="#" title="">Home</a></li>
					<li><a href="#" title="">Our work</a></li>
					<li><a href="#" title="">About us</a></li>
				</ul>
			</div>
			<div class="span2">
				<br /><br />
				<ul>
					<li><a href="#" title="">Pricing</a></li>
					<li><a href="#" title="">Explore</a></li>
					<li><a href="#" title="">Contact</a></li>
				</ul>
			</div>
			<div class="span4 social-networks">
				<h3>Stay in touch</h3>
				<p>Stay in touch on social networks</p>
				<a href="#" title="Follow us on Facebook" class="icon-facebook"></a>
				<a href="#" title="Follow us on Twitter" class="icon-twitter"></a>
				<a href="#" title="Follow us on Google Plus" class="icon-google-plus"></a>
				<a href="#" title="Follow us on Google Plus" class="icon-github"></a>
				<a href="#" title="Follow us on Google Plus" class="icon-pinterest"></a>
			</div>
			<div class="span4">
				<h3>Newsletter</h3>
				<p>Subscribe to our monthly newsletter and be the first to know about our news and special deals!</p>
				<form>
					<input type="text" placeholder="Enter your E-mail" />
					<input type="submit" class="btn" value="Ok" />
				</form>
			</div>
		</div> <!-- /row -->		
	</div> <!-- /container -->
